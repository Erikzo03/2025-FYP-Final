\documentclass[12pt]{article}
\usepackage[margin=1in]{geometry}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\rhead{Wound Image Classification Report}
\lhead{Project Documentation}
\cfoot{\thepage}

\title{Wound Image Classification using Handcrafted Features}
\author{\textbf{Student Name}}  % Replace with your name
\date{\today}

\begin{document}

\maketitle

\section*{1. Introduction}
This project focuses on developing a baseline system to classify wound images using traditional image processing techniques. Instead of relying on complex deep learning models, we extract handcrafted features from both the original images and their corresponding mask images to build a dataset for training a machine learning model. The primary goal is to understand and evaluate the effectiveness of handcrafted features for medical image classification in a controlled, explainable pipeline.

\section*{2. Motivation and Background}
In medical imaging, especially in wound analysis, obtaining large datasets to train deep neural networks can be difficult. Furthermore, these models can often act as black boxes. By using handcrafted features, we maintain control and interpretability while ensuring that the model has enough discriminative power to make useful predictions. Masks help by isolating the wound area, eliminating irrelevant parts of the image and improving feature quality.

\section*{3. Dataset Structure}
The dataset consists of the following elements:
\begin{itemize}
    \item \textbf{Original wound images}: JPEG or PNG format images showing wounds.
    \item \textbf{Mask images}: Binary images highlighting only the wound region (white for wound, black for background).
    \item \textbf{Labels CSV}: A CSV file with each image's filename and its corresponding class label.
\end{itemize}

Filenames are expected to be consistent across these components to ensure proper pairing.

\section*{4. Project Development Process}
The project was developed iteratively through the following steps:

\subsection*{4.1 Initial Setup}
We first created a structured folder setup and ensured the presence of original images, mask images, and the labels CSV. Next, we wrote utility functions to read and write image files reliably.

\subsection*{4.2 Feature Extraction Pipeline}
A core function, \texttt{create\_feature\_dataset()}, was built to automate the following:
\begin{itemize}
    \item Read original and mask images.
    \item Extract three types of features using custom functions: \texttt{extract\_feature\_A}, \texttt{B}, and \texttt{C}.
    \item Handle differences in feature return types (scalars or arrays).
    \item Incorporate labels if available.
    \item Compile everything into a DataFrame and save it to a CSV file.
\end{itemize}

The use of masks ensures that features from \texttt{extract\_feature\_C} are focused only on the wound area.

\subsection*{4.3 Classifier Training}
The \texttt{main()} function loads the dataset (or regenerates it if needed) and:
\begin{enumerate}
    \item Extracts feature columns.
    \item Splits the data into training and testing sets.
    \item Trains a Logistic Regression classifier.
    \item Evaluates the model using accuracy and a confusion matrix.
    \item Saves the test results (true vs. predicted labels) to a results file.
\end{enumerate}

\section*{5. Technical Design}
\subsection*{5.1 Modular Structure}
The project is modular by design:
\begin{itemize}
    \item \texttt{img\_util.py} handles image I/O.
    \item \texttt{feature\_A/B/C.py} separate feature logic.
    \item Main script handles orchestration.
\end{itemize}
This separation makes the project easier to debug, test, and extend.

\subsection*{5.2 Robustness Features}
\begin{itemize}
    \item Checks for missing masks and images.
    \item Dynamically handles feature vector lengths.
    \item Supports optional label usage.
    \item Ensures the results directory exists.
\end{itemize}

\section*{6. Evaluation and Results}
After training, we report the model's test set accuracy and a confusion matrix. The system performs reliably for a baseline model. The results are saved for later analysis or visualization.

\section*{7. Strengths and Limitations}
\textbf{Strengths:}
\begin{itemize}
    \item Transparent, explainable pipeline.
    \item Modular and easy to maintain.
    \item No dependence on large datasets or deep models.
\end{itemize}

\textbf{Limitations:}
\begin{itemize}
    \item Feature quality is limited by manual design.
    \item Logistic regression may not capture complex patterns.
    \item Not optimized for speed or high scalability.
\end{itemize}

\section*{8. Future Work}
\begin{itemize}
    \item Introduce automatic scaling or normalization for features.
    \item Replace logistic regression with more advanced models (e.g., SVM, Random Forest).
    \item Integrate deep learning for feature extraction or classification.
    \item Develop a GUI or web interface for non-programmer users.
\end{itemize}

\section*{9. Conclusion}
This project successfully demonstrates how a traditional image processing pipeline can be used for wound image classification. By focusing on modular design and interpretability, we built a strong baseline system that can serve as the foundation for future enhancements.

\end{document}
